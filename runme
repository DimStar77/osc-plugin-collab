#!/bin/sh
# vim: set ts=4 sw=4 et:

#
# Copyright (c) 2008, Novell, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#  * Neither the name of the <ORGANIZATION> nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#
# (Licensed under the simplified BSD license)
#
# Authors: Vincent Untz <vuntz@novell.com>
#

basedir=`dirname $0`

if test "x$OBS_DISSECTOR_DIR" = "x"; then
    OBS_DISSECTOR_DIR=/tmp/obs-dissector
fi

mkdir -p $OBS_DISSECTOR_DIR

cp --force $basedir/upstream-packages-match.txt $OBS_DISSECTOR_DIR
cp --force $basedir/upstream-limits.txt $OBS_DISSECTOR_DIR
cp --force $basedir/upstream-tarballs.txt $OBS_DISSECTOR_DIR

######################################
# Download latest upstream versions
# For non-GNOME:Factory, we only care about the official GNOME modules.

download_gnome_version () {
    VERSION=$1
    if test "x$1" = "x"; then
        return
    fi

    DESTFILE=$OBS_DISSECTOR_DIR/tmp/versions-$VERSION
    if test -f $DESTFILE; then
        rm -f $DESTFILE
    fi

    wget -q -nc -O $DESTFILE http://www.gnome.org/~vuntz/tmp/versions/versions-$VERSION

    # Don't use gstreamer from ftp.gnome.org -- it can be outdated
    sed -i "s/^\(desktop:gst-plugins.*\)$/# \1/g;s/^\(desktop:gstreamer:.*\)$/# \1/g" $DESTFILE
    # We don't care about mobile stuff
    sed -i "s/^\(mobile:.*\)$/# \1/g" $DESTFILE
}

download_gnome_version 2.24
download_gnome_version 2.26
download_gnome_version stable
download_gnome_version unstable
download_gnome_version extras

FACTORY_VERSION=unstable

# For G:F, we want extras and non-fgo stuff
cp $OBS_DISSECTOR_DIR/tmp/versions-non-fgo $OBS_DISSECTOR_DIR/tmp/versions-non-fgo.bak
$basedir/download-upstream-versions --upstream-tarballs=$OBS_DISSECTOR_DIR/upstream-tarballs.txt --upstream-limits=$OBS_DISSECTOR_DIR/upstream-limits.txt  --save-file=$OBS_DISSECTOR_DIR/tmp/versions-non-fgo --only-if-old --use-old-as-fallback
if test $? -ne 0; then
    cp $OBS_DISSECTOR_DIR/tmp/versions-non-fgo.bak $OBS_DISSECTOR_DIR/tmp/versions-non-fgo
    echo "Error while checking for new upstream versions"
fi
cat $OBS_DISSECTOR_DIR/tmp/versions-$FACTORY_VERSION $OBS_DISSECTOR_DIR/tmp/versions-extras $OBS_DISSECTOR_DIR/tmp/versions-non-fgo > $OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory

# Check that we have everything in the match database (GNOME:Factory only).
for i in `grep -v '^#' $OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory | grep ':' | cut -d ':' -f 2`; do
    re_i=`echo $i | sed 's/\+/\\\\\\+/g'`
    grep -q -E "^(# ?)?$re_i:" $OBS_DISSECTOR_DIR/upstream-packages-match.txt
    if test $? -ne 0; then
        echo $i not in $OBS_DISSECTOR_DIR/upstream-packages-match.txt
    fi
done


######################################
# Check out from the build service

# We check everything out in a temporary directory.
# At the end, we'll symlink this directory to the stable directory, and
# remove the old checkout. This way, we always have a valid & working
# stable checkout.
CACHE_CO=`$basedir/obs-checkout --get-stable-directory`
DEST_CO=`$basedir/obs-checkout --get-new-directory`

checkout_project () {
    PROJECT=$1
    if test "x$1" = "x"; then
        return
    fi

    VERSIONFILE=$2
    PARENT=$3

    if test "x$PARENT" != "x"; then
        $basedir/obs-checkout --cache-directory "$CACHE_CO" --destination-directory "$DEST_CO" --packages-of $PROJECT --project $PARENT
        if test $? -ne 0; then
            echo "Error while checking out $PARENT"
            exit 1
        fi
        echo "versionfile=$VERSIONFILE" > $DEST_CO/$PARENT/osc-gnome-config
    fi

    if test "x$PARENT" != "x"; then
        OBS_CO_OPTIONS="--warn-if-not-unexpanded-link"
    else
        OBS_CO_OPTIONS=
    fi

    $basedir/obs-checkout --cache-directory "$CACHE_CO" --destination-directory "$DEST_CO" $OBS_CO_OPTIONS --project $PROJECT
    if test $? -ne 0; then
        echo "Error while checking out $PROJECT"
        exit 1
    fi
    echo "parent=$PARENT" > $DEST_CO/$PROJECT/osc-gnome-config
    echo "versionfile=$VERSIONFILE" >> $DEST_CO/$PROJECT/osc-gnome-config
}

checkout_project GNOME:Factory "$OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory" openSUSE:Factory
checkout_project X11:common:Factory "$OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory" openSUSE:Factory
checkout_project X11:Compiz "$OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory" openSUSE:Factory
checkout_project GNOME:Contrib "$OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory" openSUSE:Factory:Contrib

# Moblin support
checkout_project Moblin:Base "$OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory" Moblin:Factory
checkout_project Moblin:UI "$OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory" Moblin:Factory

# Disabling G:S:2.24 since it should be up-to-date and there's no real effort for it anymore.
#checkout_project GNOME:STABLE:2.24 "$OBS_DISSECTOR_DIR/tmp/versions-2.24" openSUSE:11.1
checkout_project GNOME:STABLE:2.26 "$OBS_DISSECTOR_DIR/tmp/versions-2.26"

# This is a project that we use when we want to work on the next release of
# openSUSE but oS:F has not been branched yet. Comment/uncomment when
# appropriate.
#checkout_project GNOME:Factory:Next openSUSE:Factory $OBS_DISSECTOR_DIR/tmp/versions-GNOME_Factory

$basedir/obs-checkout --make-directory-stable "$DEST_CO"


######################################
# Get the rpmlint data
# GNOME:Factory only

# We download the rpmlint data. We keep the old version around until we're sure
# the new version is fine.
get_rpmlint () {
    PROJECT=$1
    if test "x$1" = "x"; then
        return
    fi

    if test -f rpmlint.tar.bz2; then
        rm -f rpmlint.tar.bz2
    fi
    wget -q ftp://ftp.coolice.org/rpmlint/$PROJECT/rpmlint.tar.bz2
    if test $? -eq 0; then
        if test -d $PROJECT; then
            mv $PROJECT $PROJECT.old
        fi
        tar jxf rpmlint.tar.bz2
        if test $? -ne 0 -a -d $PROJECT.old; then
            mv $PROJECT.old $PROJECT
        fi
        if test -d $PROJECT.old; then
            rm -rf $PROJECT.old
        fi

        rm -f rpmlint.tar.bz2
    fi
}

mkdir -p $OBS_DISSECTOR_DIR/tmp/rpmlint
pushd $OBS_DISSECTOR_DIR/tmp/rpmlint > /dev/null
get_rpmlint openSUSE:Factory
get_rpmlint GNOME:Factory
get_rpmlint GNOME:Contrib
popd > /dev/null


######################################
# Create the databases

$basedir/create-database --force --output-database $OBS_DISSECTOR_DIR/obs.db
$basedir/list-packages --output-database $OBS_DISSECTOR_DIR/packagelist.db
