This directory contains the script used to create the server-side
database used by the osc collab plugin.

All data created will be created in ./cache/ unless the cache-dir option
in a configuration file is set. You can choose the configuration file
via the -o command-line option, or via the OBS_OPTIONS environment
variable. The format of the file is the one described in
obs-db/data/defaults.conf.

There are runme scripts that should help people get started. Ideally,
those scripts would be run in cron jobs:

 ./runme: a good period would be every 12 hours or every day

 ./obs-db/runme: a good period should be between every 10 minutes and
                 every 30 minutes (it has to be tweaked)

 ./upstream/runme: a good period should be every 30 minutes


#######################################################################


runme:
    Small helper to call list-packages.

list-packages:
        Create a small database containing the list of packages in
        various Build Service projects. This is needed by the browse.py
        web script.


obs-db/
    Contains a script that will checks out the relevant data from the
    build service, and creates a database for osc collab. It was
    designed to not be too expensive in resources for the build service,
    by using hermes to know what has changed in the past.

    The default configuration file data/defaults.conf is a good
    introduction on how to use this script (what to check out, eg). An
    example configuration, data/opensuse.conf, is available: it is the
    one used to create the osc collab openSUSE database, which means it
    will check out a lot of projects.

    All the data will be put in a cache subdirectory, unless the
    cache-dir option is set in a configuration file.


    Here is a quick overview of the structure of the code:

        data/defaults.conf:
        Configuration file documenting the configuration format and the
        defaults value.

        data/opensuse.conf:
        Configuration file used to create the database for the osc
        collab openSUSE database. It can be used with the --opensuse
        option of obs-db, or with the -s option of runme.

        buildservice.py:
        Checks out data from the build service.

        config.py:
        Handles the configuration.

        database.py:
        Creates a database based on the checkout and the upstream data.

        feedparser.py:
        Universal feed parser: http://www.feedparser.org/
        Put here for convenience, so you don't have to install it.

        hermes.py:
        Looks at hermes feeds to know what has changed.

        obs-db:
        Executable script that will call main.py.

        osc_copy.py:
        Some convenience functions copied from osc.

        runme:
        Small helper to launch the script.

        shell.py:
        Shell part of the script.

        TODO:
        List of things to do :-)

        upstream.py:
        Creates a database about upstream data.

        util.py:
        Miscellaneous functions that make life easier.


upstream/
    download-upstream-versions:
        Download information about the latest versions of various
        modules that are not hosted on ftp.gnome.org.

    runme:
    Small helper to update the upstream data.

    upstream-limits.txt:
        Information about limits for upstream versions. We might not
        want to look for unstable versions of a module, eg.

    upstream-packages-match.txt:
        Data file that matches upstream GNOME module names to openSUSE
        source package names.

    upstream-tarballs.txt:
        Information about where to find the latest upstream tarballs.
